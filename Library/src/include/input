//#define KEY_TRIBOOL(fnKey, plus, minus)                                        \
//  (bit_tribool(fnKey(KEY_FULL), plus, minus))


//! Get current keystate
//INLINE u32 key_curr_state(void) { return keyCache; }

//! Get previous key state
//INLINE u32 key_prev_state(void) { return prevKeyCache; }

//! Gives the keys of \a key that are currently down
//INLINE u32 key_is_down(u32 key) { return keyCache & key; }

//! Gives the keys of \a key that are currently up
//INLINE u32 key_is_up(u32 key) { return ~keyCache & key; }

//! Gives the keys of \a key that were previously down
//INLINE u32 key_was_down(u32 key) { return prevKeyCache & key; }

//! Gives the keys of \a key that were previously down
//INLINE u32 key_was_up(u32 key) { return ~prevKeyCache & key; }

//! Gives the keys of \a key that are different from before
//INLINE u32 key_transit(u32 key) { return (keyCache ^ prevKeyCache) & key; }

//! Gives the keys of \a key that are being held down
//INLINE u32 key_held(u32 key) { return (keyCache & prevKeyCache) & key; }

//! Gives the keys of \a key that are pressed (down now but not before)
//INLINE u32 key_hit(u32 key) { return (keyCache & ~prevKeyCache) & key; }

//! Gives the keys of \a key that are being released
//INLINE u32 key_released(u32 key) { return (~keyCache & prevKeyCache) & key; }

// Horizontal tribool (right,left)=(+,-)
//INLINE int key_tri_horz(void) {
  //return bit_tribool(keyCache, KI_RIGHT, KI_LEFT);
//}

// Vertical tribool (down,up)=(+,-)
//INLINE int key_tri_vert(void) { return bit_tribool(keyCache, KI_DOWN, KI_UP); }

// Shoulder-button tribool (R,L)=(+,-)
//INLINE int key_tri_shoulder(void) { return bit_tribool(keyCache, KI_R, KI_L); }

// Fire-button tribool (A,B)=(+,-)
//INLINE int key_tri_fire(void) { return bit_tribool(keyCache, KI_A, KI_B); }
